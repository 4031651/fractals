(()=>{var t={741:function(t){t.exports=function(){"use strict";var t={keyColor:"dimgray",numberColor:"lightskyblue",stringColor:"lightcoral",trueColor:"lightseagreen",falseColor:"#f66578",nullColor:"cornflowerblue"},e={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","`":"&#x60;","=":"&#x3D;"};return function(a,s){void 0===s&&(s={});var i=typeof a;"string"!==i&&(a=JSON.stringify(a,null,2)||i);var n=Object.assign({},t,s);return(a=a.replace(/&/g,"&").replace(/</g,"<").replace(/>/g,">")).replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+]?\d+)?)/g,(function(t){var a,s=n.numberColor,i="";return/^"/.test(t)?/:$/.test(t)?s=n.keyColor:(s=n.stringColor,t='"'+(a=t.substr(1,t.length-2),String(a).replace(/[&<>"'`=]/g,(function(t){return e[t]}))+'"'),i="word-wrap:break-word;white-space:pre-wrap;"):s=/true/.test(t)?n.trueColor:/false/.test(t)?n.falseColor:/null/.test(t)?n.nullColor:s,'<span style="'+i+"color:"+s+'">'+t+"</span>"}))}}()}},e={};function a(s){if(e[s])return e[s].exports;var i=e[s]={exports:{}};return t[s].call(i.exports,i,i.exports,a),i.exports}a.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return a.d(e,{a:e}),e},a.d=(t,e)=>{for(var s in e)a.o(e,s)&&!a.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},a.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{"use strict";function t(t,e,a){const{a:s,b:i,c:n,d:r,e:F,f:o}=a;return{x:t*s+e*i+F,y:t*n+e*r+o}}function e(t,e,a){const{a:s,b:i,t:n,e:r,f:F}=a;return{x:t*s*Math.cos(n)-e*i*Math.sin(n)+r,y:t*s*Math.sin(n)+e*i*Math.cos(n)+F}}class s{constructor(e){this.points=[],this.bounds=[0,0,0,0],this.matrices=e.matrices,this.density=e.density??50,this.iterations=e.iterations??1e5,this.equation=e.equation||t}getMatrix(){const t=this.matrices.length;let e=0;for(let a=0;a<t;a++)e+=this.matrices[a].p;let a=Math.random()*e;for(let e=0;e<t;e++){const t=this.matrices[e];if(a<t.p)return{...t,index:e};a-=t.p}return{...this.matrices[0],index:0}}run(t){let e=0,a=0;for(let s=0;s<this.iterations;s++){const i=this.getMatrix();({x:e,y:a}=this.equation(e,a,i));const n=e*this.density,r=a*this.density;this.bounds=[Math.max(this.bounds[0],n),Math.max(this.bounds[1],r),Math.min(this.bounds[2],n),Math.min(this.bounds[3],r)],this.points.push([n,r,{matrixNum:i.index}]),"function"==typeof t&&t([n,r,{matrixNum:i.index}],s)}}}const i=Math.PI/180,n=()=>{};class r{constructor(t){this.state={x:0,y:0,angle:0},this.stack=[],this.points=[[0,0,{paintable:!1}]],this.bounds=[0,0,0,0],this.distance=t.distance,this.angle=t.angle,this.lengthScale=t.lengthScale??1,this.processLSystem(t.iterations,t.axiom,t.rules)}processLSystem(t,e,a){let s=e;if(0!==t){for(let e=0;e<t;e++){const t=[];for(const e of s)e in a?t.push(a[e]):t.push(e);s=t.join("")}this.instructions=s}else this.instructions=e}run(t){const e="function"==typeof t?t:n;let a=-1;for(const t of this.instructions)a++,"F"===t?this.forward(a,e):"B"===t?this.backward(a,e):"+"===t?this.right():"-"===t?this.left():"["===t?this.stack.push({...this.state}):"]"===t?(this.state=this.stack.pop(),this.points.push([this.state.x,this.state.y,{paintable:!1}]),e([this.state.x,this.state.y,{paintable:!1}],a)):">"===t?this.distance*=this.lengthScale:"<"===t&&(this.distance/=this.lengthScale)}move(t,e,a=!1){const{x:s,y:n,angle:r}=this.state,F=a?this.distance:-this.distance,o=s+Math.sin(r*i)*F,l=n+Math.cos(r*i)*F;this.state.x=Math.round(1e3*o)/1e3,this.state.y=Math.round(1e3*l)/1e3,this.bounds=[Math.max(this.bounds[0],this.state.x),Math.max(this.bounds[1],this.state.y),Math.min(this.bounds[2],this.state.x),Math.min(this.bounds[3],this.state.y)],this.points.push([this.state.x,this.state.y,{paintable:!0}]),e([this.state.x,this.state.y,{paintable:!0}],t)}forward(t,e){this.move(t,e)}backward(t,e){this.move(t,e,!0)}right(){this.state.angle=(this.state.angle-this.angle)%360}left(){this.state.angle=(this.state.angle+this.angle)%360}}var F=a(741),o=a.n(F);const l={};function c(t,e){return l[t]||(l[t]=function(t){return new Function("obj","var p=[],print=function(){p.push.apply(p,arguments);};with(obj){p.push('"+t.replace(/[\r\t\n]/g," ").split("<%").join("\t").replace(/((^|%>)[^\t]*)'/g,"$1\r").replace(/\t=(.*?)%>/g,"',$1,'").split("\t").join("');").split("%>").join("p.push('").split("\r").join("\\'")+"');}return p.join('');")}(document.getElementById(t).innerHTML)),l[t](e)}const u=JSON.parse('{"Pythagoras Tree":{"axiom":"FX","rules":{"X":">[-FX]+FX<"},"iterations":10,"distance":100,"angle":50,"lengthScale":0.7},"L Tree":{"axiom":"X","rules":{"F":"FF","X":"F+[[X]-X]-F[-FX]+X"},"iterations":5,"distance":6,"angle":22.5},"L Tree 2":{"axiom":"F","rules":{"F":">FF+[+F-F-F]-[-F+F+F]<"},"iterations":5,"distance":20,"angle":22.5,"lengthScale":0.7},"32 Segment Curve":{"axiom":"F+F+F+F","rules":{"F":"-F+F-F-F+F+FF-F+F+FF+F-F-FF+FF-FF+F+F-FF-F-F+FF-F-F+F+F-F+"},"iterations":2,"distance":4,"angle":90},"Box Fractal":{"axiom":"F-F-F-F","rules":{"F":"F-F+F+F-F"},"iterations":5,"distance":2,"angle":90},"Dragon Curve":{"axiom":"FX","rules":{"X":"X+YF+","Y":"-FX-Y"},"iterations":14,"distance":3,"angle":90},"Twin Dragon Curve":{"axiom":"FX+FX","rules":{"X":"X+YF+","Y":"-FX-Y"},"iterations":12,"distance":3,"angle":90},"Three Dragon Curve":{"axiom":"FX+FX+FX","rules":{"X":"X+YF+","Y":"-FX-Y"},"iterations":12,"distance":3,"angle":90},"Ter Dragon Curve":{"axiom":"F","rules":{"F":"F-F+F"},"iterations":9,"distance":3,"angle":120},"Levy C Curve":{"axiom":"F","rules":{"F":"+F--F+"},"iterations":12,"distance":3,"angle":45},"Hilberts Curve":{"axiom":"L","rules":{"L":"+RF-LFL-FR+","R":"-LF+RFR+FL-"},"iterations":7,"distance":3,"angle":90},"Hilbert Curve II":{"axiom":"X","rules":{"X":"XFYFX+F+YFXFY-F-XFYFX","Y":"YFXFY-F-XFYFX+F+YFXFY"},"iterations":4,"distance":3,"angle":90},"Koch Snowflake":{"axiom":"F--F--F","rules":{"F":"F+F--F+F"},"iterations":4,"distance":3,"angle":60},"Peano Curve":{"axiom":"F","rules":{"F":"F+F-F-F-F+F+F+F-F"},"iterations":3,"distance":10,"angle":90},"Peano Gosper Curve":{"axiom":"FX","rules":{"X":"X+YF++YF-FX--FXFX-YF+","Y":"-FX+YFYF++YF+FX--FX-Y"},"iterations":4,"distance":5,"angle":60},"Quadratic Koch Island":{"axiom":"F+F+F+F","rules":{"F":"F-F+F+FFF-F-F+F"},"iterations":3,"distance":3,"angle":90},"Sierpinski Arrowhead":{"axiom":"YF","rules":{"X":"YF+XF+Y","Y":"XF-YF-X"},"iterations":7,"distance":3,"angle":60},"Sierpinski Curve":{"axiom":"F+XF+F+XF","rules":{"X":"XF-F+F-XF+F+XF-F+F-X"},"iterations":5,"distance":3,"angle":90},"Siepinski Sieve":{"axiom":"FXF--FF--FF","rules":{"F":"FF","X":"--FXF++FXF++FXF--"},"iterations":6,"distance":3,"angle":60},"Quadratic Snowflake":{"axiom":"F--F","rules":{"F":"F-F+F+F-F"},"iterations":4,"distance":5,"angle":90},"Board":{"axiom":"F+F+F+F","rules":{"F":"FF+F+F+F+FF"},"iterations":4,"distance":5,"angle":90},"Cross":{"axiom":"F+F+F+F","rules":{"F":"F+FF++F+F"},"iterations":5,"distance":5,"angle":90},"Cross 2":{"axiom":"F+F+F+F","rules":{"F":"F+F-F+F+F"},"iterations":5,"distance":5,"angle":90},"Pentaplexity":{"axiom":"F++F++F++F++F","rules":{"F":"F++F++F+++++F-F++F"},"iterations":4,"distance":5,"angle":36},"Tiles":{"axiom":"F+F+F+F","rules":{"F":"FF+F-F+F+FF"},"iterations":4,"distance":7,"angle":90},"Rings":{"axiom":"F+F+F+F","rules":{"F":"FF+F+F+F+F+F-F"},"iterations":4,"distance":3,"angle":90},"Krishna Anklets":{"axiom":" -X--X","rules":{"X":"XFX--XFX"},"iterations":6,"distance":4,"angle":45},"Triangle":{"axiom":"F+F+F","rules":{"F":"F-F+F"},"iterations":7,"distance":6,"angle":120},"Quadratic Gosper":{"axiom":"YF","rules":{"X":"XFX-YF-YF+FX+FX-YF-YFFX+YF+FXFXYF-FX+YF+FXFX+YF-FXYF-YF-FX+FX+YFYF-","Y":"+FXFX-YF-YF+FX+FXYF+FX-YFYF-FX-YF+FXYFYF-FX-YFFX+FX+YF-YF-FX+FX+YFY"},"iterations":3,"distance":3,"angle":90},"Crystal":{"axiom":"F+F+F+F","rules":{"F":"FF+F++F+F"},"iterations":4,"distance":5,"angle":90},"Moore Curve":{"axiom":"LFL-F-LFL","rules":{"L":"+RF-LFL-FR+","R":"-LF+RFR+FL-"},"iterations":5,"distance":5,"angle":90}}'),d=JSON.parse('{"Fern":{"matrices":[{"a":0,"b":0,"c":0,"d":0.16,"e":0,"f":0,"p":0.01},{"a":0.85,"b":0.04,"c":-0.04,"d":0.85,"e":0,"f":1.6,"p":0.85},{"a":0.2,"b":-0.26,"c":0.23,"d":0.22,"e":0,"f":1.6,"p":0.07},{"a":-0.15,"b":0.28,"c":0.26,"d":0.24,"e":0,"f":0.44,"p":0.07}],"equation":"affine"},"IFS Tree":{"matrices":[{"a":0.05,"b":0,"c":0,"d":0.4,"e":-0.06,"f":-0.47,"p":1},{"a":-0.05,"b":0,"c":0,"d":-0.4,"e":-0.06,"f":-0.47,"p":1},{"a":0.03,"b":-0.14,"c":0,"d":0.26,"e":-0.16,"f":-0.01,"p":1},{"a":-0.03,"b":0.14,"c":0,"d":-0.26,"e":-0.16,"f":-0.01,"p":1},{"a":0.56,"b":0.44,"c":-0.37,"d":0.51,"e":0.3,"f":0.15,"p":1},{"a":0.19,"b":0.07,"c":-0.1,"d":0.15,"e":-0.2,"f":0.28,"p":1},{"a":-0.33,"b":-0.34,"c":-0.33,"d":0.34,"e":-0.54,"f":0.39,"p":1}],"equation":"affine","density":250,"iterations":50000},"Weed":{"matrices":[{"a":0.5,"b":0,"c":0,"d":0.75,"e":0.2,"f":0,"p":0.25},{"a":0.25,"b":0.1,"c":-0.2,"d":0.3,"e":0.2,"f":0.5,"p":0.25},{"a":0.25,"b":-0.1,"c":0.2,"d":0.3,"e":0.5,"f":0.4,"p":0.25},{"a":0.2,"b":0,"c":0,"d":0.3,"e":0.4,"f":0.55,"p":0.25}],"equation":"affine","density":500,"iterations":10000},"Maple Leaf":{"matrices":[{"a":0.14,"b":0.01,"c":0,"d":0.51,"e":-0.08,"f":-1.31,"p":1},{"a":0.43,"b":0.52,"c":-0.45,"d":0.5,"e":1.49,"f":-0.75,"p":1},{"a":0.45,"b":-0.49,"c":0.47,"d":0.47,"e":-1.62,"f":-0.74,"p":1},{"a":0.49,"b":0,"c":0,"d":0.51,"e":0.02,"f":1.62,"p":1}],"equation":"affine","density":50},"Spiral":{"matrices":[{"a":0.787879,"b":-0.424242,"c":0.242424,"d":0.859848,"e":1.758647,"f":1.408065,"p":0.9},{"a":-0.121212,"b":0.257576,"c":0.151515,"d":0.05303,"e":-6.721654,"f":1.377236,"p":0.05},{"a":0.181818,"b":-0.136364,"c":0.090909,"d":0.181818,"e":6.086107,"f":1.568035,"p":0.05}],"iterations":50000},"IFS Pythagoras Tree":{"matrices":[{"a":0.01,"b":0,"c":0,"d":0.45,"e":0,"f":0,"p":1},{"a":-0.01,"b":0,"c":0,"d":-0.45,"e":0,"f":0.4,"p":1},{"a":0.42,"b":-0.42,"c":0.42,"d":0.42,"e":0,"f":0.4,"p":1},{"a":0.42,"b":0.42,"c":-0.42,"d":0.42,"e":0,"f":0.4,"p":1}],"density":300},"Radial 1":{"matrices":[{"a":1,"b":0.76,"t":6,"e":0.1,"f":0.62,"p":0.9},{"a":0.79,"b":0.7,"t":2.34,"e":0.41,"f":-1,"p":0.1}],"equation":"radial","iterations":50000},"Radial 2":{"matrices":[{"a":0.9,"b":0.94,"t":5.7,"e":0.01,"f":0.62,"p":0.94},{"a":0.28,"b":0.7,"t":2.9,"e":0.5,"f":-1,"p":0.1}],"equation":"radial","iterations":50000},"Radial 3":{"matrices":[{"a":0.28,"b":0.83,"t":4,"e":0.57,"f":0,"p":0.18},{"a":0.8,"b":0.74,"t":0.59,"e":0.46,"f":0.76,"p":0.42}],"equation":"radial","iterations":50000}}'),h={keyColor:"#9876AA",numberColor:"#6897BB",stringColor:"#6A8759",trueColor:"#CC7832",falseColor:"#CC7832",nullColor:"#CC7832"};function p(t){return document.querySelector(t)}function f(a,i){if("l"!==a)if("ifs"!==a)console.warn("render():: Unknown fractal type "+a);else{const a=d[i];if(!a)return;p("#config").innerHTML=o()(function(t){return JSON.stringify(t,((t,e)=>"matrices"===t?e.map((t=>`¤¤${JSON.stringify(t,null," ")}¤¤`)):e),2).replace(/\\"/g,'"').replace(/"¤¤{/g,"{").replace(/}¤¤"/g," }").replace(/\\n/g,"")}(a),h);const n=new s({...a,equation:"radial"===a.equation?e:t});n.run(),function(t,e){if(!t)return void console.warn("canvas is null");const a=e.bounds[2],s=e.bounds[3];t.height=e.bounds[1]+Math.abs(e.bounds[3])+20,t.width=e.bounds[0]+Math.abs(e.bounds[2])+20;const i=t.getContext("2d");i.fillStyle="#000",i.save(),i.fillRect(0,0,t.width,t.height),i.translate(10-a,s+t.height-10),i.scale(1,-1);const n=255/e.matrices.length-1;for(let t=0;t<e.points.length;t++){const[a,s,{matrixNum:r}]=e.points[t];i.fillStyle=`hsl(${n*r}, 100%, 50%)`,i.fillRect(a,s,1,1)}i.restore()}(p("#canvas"),n)}else{const t=u[i];if(!t)return;p("#config").innerHTML=o()(t,h);const e=new r(t);e.run(),function(t,e){if(!t)return void console.warn("canvas is null");const a=-e.bounds[2],s=-e.bounds[3];t.height=e.bounds[1]+Math.abs(e.bounds[3])+20,t.width=e.bounds[0]+Math.abs(e.bounds[2])+20;const i=t.getContext("2d");i.save(),i.translate(10,10);const n=255/e.points.length-1;for(let t=1;t<e.points.length;t++){const[r,F,{paintable:o}]=e.points[t];if(!o)continue;i.beginPath();const[l,c]=e.points[t-1];i.moveTo(l+a,c+s),i.strokeStyle=`hsl(${n*t}, 100%, 50%)`,i.lineTo(r+a,F+s),i.stroke(),i.closePath()}i.restore()}(p("#canvas"),e)}}document.addEventListener("DOMContentLoaded",(()=>{const t=Object.keys(u)[0];p("#l-examples").innerHTML=c("examples",{fractals:u,active:t}),p("#ifs-examples").innerHTML=c("examples",{fractals:d,active:t}),p("#l-examples").addEventListener("click",(t=>{const{fractal:e}=t.target.dataset;e&&(p("#l-examples .active")?.classList.remove("active"),t.target.classList.add("active"),f("l",e))})),p("#ifs-examples").addEventListener("click",(t=>{const{fractal:e}=t.target.dataset;e&&(p("#ifs-examples .active")?.classList.remove("active"),t.target.classList.add("active"),f("ifs",e))})),p("#tabs"+" > .tabs").addEventListener("click",(t=>{const e=t.target;if("true"===e.getAttribute("aria-selected"))return;p("#tabs [aria-selected=true]").setAttribute("aria-selected","false"),e.setAttribute("aria-selected","true");const a=e.getAttribute("aria-controls");p(".tab-pane.show").classList.remove("show"),p(`.tab-pane[aria-labelledby="${a}"]`).classList.add("show")})),f("l",t)}))})()})();